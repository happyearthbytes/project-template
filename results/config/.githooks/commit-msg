#!/bin/sh
#
# An example hook script to check the commit log message.
# Called by "git commit" with one argument, the name of the file
# that has the commit message.  The hook should exit with non-zero
# status after issuing an appropriate message if it wants to stop the
# commit.  The hook is allowed to edit the commit message file.
#
# To enable this hook, rename this file to "commit-msg".

# Uncomment the below to add a Signed-off-by line to the message.
# Doing this in a hook is a bad idea in general, but the prepare-commit-msg
# hook is more suited to it.
#
# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\(.*>\).*$/Signed-off-by: \1/p')
# grep -qs "^$SOB" "$1" || echo "$SOB" >> "$1" >&2

COMMIT_MSG=${1}

reject=0

###############################################################################
# CONFIGURATION VARIABLES
###############################################################################
# Note that this file is intended to be more general purpose than helper
# scripts that support the population of these configurations.
# If the defaults are going to be updated, the preferred method is to update
# helper scripts and not this file.
requireIssue=$(git config --get --bool hooks.commit-msg.requireIssue || echo 'true')
issueRegex=$(git config --get hooks.commit-msg.issueRegex || echo '[[A-Z0-9]{2,10}-\d+]')
validateIssue=$(git config --get --bool hooks.commit-msg.validateIssue || echo 'false')
allowOverrides=$(git config --get --bool hooks.commit-msg.allowOverrides || echo 'false')

# get the message contents without blank lines and comments
message=$(cat "$COMMIT_MSG")

#==============================================================================
# requireIssue
#==============================================================================
if [ "${requireIssue}" = "true" ]; then
    if echo "$message" | grep -Pvq "^${issueRegex}"; then
        echo "[COMMIT-MSG] Commit must start with an Issue ID" >&2
        reject=1
    fi
fi

#==============================================================================
# validateIssue
#==============================================================================
if [ "${validateIssue}" = "true" ]; then
    echo "validateIssue not implemented" >&2
    reject=1
fi

#==============================================================================
# allowOverrides
#==============================================================================
if [ "${allowOverrides}" = "true" ]; then
    echo "allowOverrides not implemented" >&2
    reject=1
fi

###############################################################################
# REJECT
###############################################################################
if [ "$reject" -ne 0 ]; then
    echo "[COMMIT-MSG] Commit was rejected. Please fix the errors and try again" >&2
    exit ${reject}
fi